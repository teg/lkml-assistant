name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
        pip install -r requirements.txt
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install Node.js dependencies
      run: |
        cd infra
        npm install
        npm install --save-dev eslint@8 @typescript-eslint/eslint-plugin @typescript-eslint/parser
        
    - name: Lint Python
      run: |
        flake8 src tests
        black --check src tests
        
    - name: Lint TypeScript
      run: |
        cd infra
        npx eslint . --ext .ts
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov moto
        pip install -r requirements.txt
        
    - name: Run Python tests
      run: |
        pytest --cov=src tests/
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install Node.js dependencies
      run: |
        cd infra
        npm install
        
    - name: Run TypeScript tests
      run: |
        cd infra
        npm test
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install Node.js dependencies
      run: |
        cd infra
        npm install
        
    - name: Build CDK
      run: |
        cd infra
        npm run build
        
    - name: Synth CDK
      run: |
        cd infra
        npm run synth
        
    - name: Upload CDK artifact
      uses: actions/upload-artifact@v3
      with:
        name: cdk-output
        path: infra/cdk.out