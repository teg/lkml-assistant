name: Post-Deployment Verification

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
  
  # Optionally trigger automatically after successful deployment
  workflow_run:
    workflows: ["Deploy"]
    types:
      - completed
    branches:
      - main

jobs:
  verify-deployment:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    
    # Determine environment based on trigger
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Run post-deployment tests
        run: |
          echo "Running post-deployment tests for $ENVIRONMENT environment"
          python -m tests.post_deploy.runner --env $ENVIRONMENT --verbose --report-dir test-reports
      
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports-${{ env.ENVIRONMENT }}
          path: test-reports/
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            github.rest.issues.create({
              owner,
              repo,
              title: `Post-deployment tests failed for ${process.env.ENVIRONMENT}`,
              body: `Post-deployment verification tests have failed for the ${process.env.ENVIRONMENT} environment. Please check the [workflow run](https://github.com/${owner}/${repo}/actions/runs/${context.runId}) for details.`,
              labels: ['bug', 'deployment']
            });